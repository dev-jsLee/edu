services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: python-learning-db
    environment:
      POSTGRES_DB: python_learning
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "52043:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - python-learning-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    dns:
      - 8.8.8.8
      - 1.1.1.1

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: python-learning-redis
    ports:
      - "52044:6379"
    volumes:
      - redis_data:/data
    networks:
      - python-learning-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    dns:
      - 8.8.8.8
      - 1.1.1.1

  # FastAPI Backend (간단한 버전)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.simple
    container_name: python-learning-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/python_learning
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - ENVIRONMENT=development
    ports:
      - "52041:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - python-learning-network
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 1.1.1.1

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: python-learning-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:52041
      - REACT_APP_ENVIRONMENT=development
    ports:
      - "52040:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - python-learning-network
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 1.1.1.1

  # Python Code Runner (간단한 버전)
  code-runner:
    build:
      context: ./code-runner
      dockerfile: Dockerfile.simple
    container_name: python-learning-code-runner
    environment:
      - EXECUTION_TIMEOUT=30
      - MAX_MEMORY=128m
      - MAX_CPU=0.5
    ports:
      - "52042:8080"
    volumes:
      - /tmp/code-execution:/tmp/execution:rw
    networks:
      - python-learning-network
    restart: unless-stopped
    dns:
      - 8.8.8.8
      - 1.1.1.1
    # 보안을 위한 제한
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  python-learning-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: python-learning-br0
