services:
  # Flask 백엔드
  flask-backend:
    build:
      context: ./flask-app
      dockerfile: Dockerfile
    container_name: python-learning-flask
    environment:
      - FLASK_ENV=development
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=sqlite:///instance/app.db
      - CODE_RUNNER_URL=http://code-runner:8080
      - CODE_EXECUTION_TIMEOUT=30
    ports:
      - "5000:5000"
    volumes:
      - ./flask-app:/app
      - ./static:/app/static
      - ./templates:/app/templates
      - flask_data:/app/instance
    depends_on:
      - code-runner
    networks:
      - learning-network
    restart: unless-stopped

  # Python 코드 러너
  code-runner:
    build:
      context: ./code-runner
      dockerfile: Dockerfile.simple
    container_name: python-learning-code-runner
    environment:
      - EXECUTION_TIMEOUT=30
      - MAX_MEMORY=128m
      - MAX_CPU=0.5
    ports:
      - "8080:8080"
    volumes:
      - /tmp/code-execution:/tmp/execution:rw
    networks:
      - learning-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - SETUID
      - SETGID

  # PostgreSQL (추후 확장용 - 주석 처리)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: python-learning-postgres
  #   environment:
  #     POSTGRES_DB: python_learning
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres123
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - learning-network
  #   restart: unless-stopped

volumes:
  flask_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  learning-network:
    driver: bridge

